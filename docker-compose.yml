version: "3.9"

services:
  php:
    build:
      context: docker/backend
      dockerfile: Dockerfile
    container_name: php-fpm
    environment:
      XDEBUG_REMOTE_HOST: 172.18.0.1
      XDEBUG_REMOTE_PORT: 9003
      XDEBUG_DIR: /var/www/backend/var
      APP_ENV: dev
      PHP_IDE_CONFIG: "serverName=api.poketournament.local"
      MONGODB_URL: "mongodb://admin:admin@mongo:27017/poketournament?authSource=admin"
    volumes:
      - ./packages/backend:/var/www/backend
      - ./packages/core:/var/www/core
      - composer-cache:/tmp/composer
    depends_on:
      - mongo
    networks:
      - appnet

  nginx:
    image: nginx:stable
    container_name: nginx
    depends_on:
      - php
      - node
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./packages/backend:/var/www/backend:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./infra/nginx/certs:/etc/nginx/certs:ro
    networks:
      - appnet

  node:
    build:
      context: docker/frontend
    container_name: nextjs
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_BASE: "https://api.poketournament.local"
      # If you make server-side requests in Next.js via fetch/axios, you can use the public URL above.
      # Or inside Docker you can also target http://php-fpm if you prefer internal calls.
    volumes:
      - ./packages/frontend:/var/www/frontend
      - node-modules:/var/www/frontend/node_modules
    expose:
      - "3000"
    networks:
      - appnet

  mongo:
    image: mongo:6
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: poketournament
    volumes:
      - mongo-data:/data/db
    networks:
      - appnet

  mongo-express:
    image: mongo-express:1
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo:27017/
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongo
    networks:
      - appnet

  playwright:
    image: mcr.microsoft.com/playwright:v1.56.1-jammy
    container_name: playwright
    profiles: ["test"]
    working_dir: /var/www/frontend
    depends_on:
      - nginx
    environment:
      CI: "1"
    volumes:
      - ./packages/frontend:/var/www/frontend
      - /dev/shm:/dev/shm
    networks:
      - appnet
    command:
      ["bash", "-lc", "npm ci --silent && npx playwright test --reporter=list"]

volumes:
  mongo-data:
  node-modules:
  composer-cache:

networks:
  appnet:
